#!/bin/bash
#
# Regards, the Alveare Solutions #!/Society -x
#
# Gate Keeper

declare -A GK_DEFAULT
declare -A GK_LIB
declare -A GK_SOURCE
declare -A GK_CARGO
declare -A GK_PROCEDURES

# [ NOTE ]: Absolute directory path the current file is in.
GK_DIRECTORY="$(
    cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd
)"
CONF_FILE_PATH="$GK_DIRECTORY/conf/gate-keeper.conf"

if [ ! -f "$CONF_FILE_PATH" ]; then
    echo "[ WARNING ]: Config file ($CONF_FILE_PATH) not found."
    exit 1
else
    source "$CONF_FILE_PATH"
fi

for script in ${!GK_SOURCE[@]}; do
    source ${GK_SOURCE[$script]}
    if [ $? -ne 0 ] && [ ${#@} -eq 0 ]; then
        echo "[ NOK ]: Something went wrong."\
            "Could not load ($script) script."
    elif [ ${#@} -eq 0 ]; then
        echo "[ OK ]: Successfully loaded ($script) script."
    fi
done

for library in ${!GK_LIB[@]}; do
    source ${GK_LIB[$library]}
    if [ $? -ne 0 ] && [ ${#@} -eq 0 ]; then
        echo "[ NOK ]: Something went wrong."\
            "Could not load ($library) library."
    elif [ ${#@} -eq 0 ]; then
        echo "[ OK ]: Successfully loaded ($library) library."
    fi
done

# MISCELLANEOUS

function init_gate_keeper () {
    if [ ${#@} -gt 0 ]; then
        declare -A MD_DEFAULT
        declare -A MD_CARGO
        for setting_key in ${!GK_DEFAULT[@]}; do
            MD_DEFAULT["${setting_key}"]="${GK_DEFAULT[${setting_key}]}"
        done
        for setting_key in ${!GK_CARGO[@]}; do
            MD_CARGO["${setting_key}"]="${GK_CARGO[${setting_key}]}"
        done
        cli_update_config_json_file; process_cli_args $@
        return $?
    fi
    project_setup; display_banners; init_menu 'MainController'
    return $?
}

init_gate_keeper $@
exit $?

# CODE DUMP

